# ============================================================================
# NGINX Load Balancer Configuration for PDF Compare
# ============================================================================
# Features:
# - Sticky sessions (IP-based) to maintain Streamlit state
# - WebSocket support for Streamlit real-time updates
# - Load balancing across multiple Streamlit instances
# - Health checks
# - Connection limits and rate limiting
# ============================================================================

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance tuning
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    client_body_buffer_size 10M;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # Connection and rate limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_req_zone $binary_remote_addr zone=pdf_limit:10m rate=10r/s;

    # Upstream pool of Streamlit instances
    upstream streamlit_backend {
        # IP hash for sticky sessions (same user always goes to same instance)
        ip_hash;

        # Streamlit instances (Docker Compose will create these)
        server pdf-compare-ui:8501 max_fails=3 fail_timeout=30s;

        # When scaling, Docker creates multiple instances automatically
        # You can also manually add more servers:
        # server pdf-compare-ui-2:8501 max_fails=3 fail_timeout=30s;
        # server pdf-compare-ui-3:8501 max_fails=3 fail_timeout=30s;

        # Keepalive connections
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main application server
    server {
        listen 80;
        server_name localhost;

        # Connection limits
        limit_conn addr 10;
        limit_req zone=pdf_limit burst=20 nodelay;

        # Proxy settings for Streamlit
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts for long-running operations
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;

        # Buffering settings
        proxy_buffering off;
        proxy_cache off;

        # Root location - proxy to Streamlit
        location / {
            proxy_pass http://streamlit_backend;

            # Streamlit-specific headers
            proxy_set_header X-Streamlit-User $remote_addr;
        }

        # WebSocket support for Streamlit's real-time updates
        location /_stcore/stream {
            proxy_pass http://streamlit_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # Health check endpoint for Streamlit
        location /_stcore/health {
            proxy_pass http://streamlit_backend;
            access_log off;
        }

        # Static files (if any)
        location /_stcore/static {
            proxy_pass http://streamlit_backend;
            proxy_cache_valid 200 30d;
            proxy_cache_bypass $http_pragma $http_authorization;
            add_header Cache-Control "public, immutable";
        }

        # Monitoring endpoint (restricted to localhost)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.25.0.0/16;  # Docker network
            deny all;
        }
    }

    # Optional: HTTPS configuration (uncomment and configure)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #
    #     # Same proxy configuration as port 80
    #     location / {
    #         proxy_pass http://streamlit_backend;
    #         # ... (same settings as above)
    #     }
    # }
}
