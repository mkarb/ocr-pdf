version: '3.8'

# Complete deployment with PostgreSQL + Ollama + PDF Compare UI
# All AI features included

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:16-3.4
    container_name: pdf-compare-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pdfuser -d pdfcompare"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pdf-network

  # Ollama Service for AI/LLM features
  ollama:
    image: ollama/ollama:latest
    container_name: pdf-compare-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pdf-network
    # Optional: GPU support (requires nvidia-docker)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Model Initialization Container
  # Pulls required models on first run
  ollama-init:
    image: ollama/ollama:latest
    container_name: pdf-compare-ollama-init
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - pdf-network
    environment:
      - OLLAMA_HOST=http://ollama:11434
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "Waiting for Ollama to be fully ready..."
        sleep 5

        echo "Pulling llama3.2 model (this may take a few minutes)..."
        ollama pull llama3.2 || true

        echo "Pulling nomic-embed-text model..."
        ollama pull nomic-embed-text || true

        echo "Models ready!"
        ollama list
    restart: "no"

  # PDF Compare UI Container
  pdf-compare-ui:
    build: .
    container_name: pdf-compare-ui
    ports:
      - "8501:8501"
    volumes:
      - ./data/uploads:/app/data/uploads
      - ./data/outputs:/app/data/outputs
    environment:
      # Database connection
      DATABASE_URL: postgresql://pdfuser:pdfpassword@postgres:5432/pdfcompare

      # Ollama connection
      OLLAMA_HOST: http://ollama:11434

      # Performance settings
      CPU_LIMIT: 15
      PDF_MIN_SEGMENT_LEN: 0.50
      PDF_MIN_FILL_AREA: 0.50
      PDF_BEZIER_SAMPLES: 24

      # Python settings
      PYTHONUNBUFFERED: 1
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
      ollama-init:
        condition: service_completed_successfully
    restart: unless-stopped
    command: streamlit run ui/streamlit_app.py --server.address 0.0.0.0 --server.port 8501
    networks:
      - pdf-network
    cpus: 16
    mem_limit: 8g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    driver: local
  ollama-data:
    driver: local

networks:
  pdf-network:
    driver: bridge
